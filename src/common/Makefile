#
#  * @author         Domingos Rodrigues
#  * @modified       Thu Sep 22 20:43:05 2016
#

top_builddir = ../..
top_srcdir = ../..

pkgdatadir = $(datadir)/slurm
pkglibdir = $(libdir)/slurm
pkgincludedir = $(includedir)/slurm



CC = gcc
CCDEPMODE = depmode=none
CFLAGS = -DNUMA_VERSION1_COMPATIBILITY -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 \
	-fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic \
	-pthread -fno-gcse -fgnu89-inline
CMD_LDFLAGS =
CPP = gcc -E
CPPFLAGS =

DEFS = -DHAVE_CONFIG_H

DEFAULT_INCLUDES = -I. -I$(top_builddir) -I$(top_builddir)/include
INCLUDES = -I$(top_srcdir)

CCLD = $(CC)
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS =
SO_LDFLAGS =

LIBTOOL = /bin/sh $(top_builddir)/libtool
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(CPPFLAGS) $(CFLAGS)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(CFLAGS) \
	$(LDFLAGS) -o $@

EXEEXT =
OBJEXT = o
LIBS =

noinst_PROGRAMS = libcommon.o$(EXEEXT)  libeio.o$(EXEEXT) \
	libspank.o$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)

#----------------------------------------------------------------------
am_libcommon_la_OBJECTS = timers_n.lo slurm_time.lo \
	assoc_mgr.lo basil_resv_conf.lo xmalloc.lo \
	xassert.lo xstring.lo xsignal.lo forward.lo strlcpy.lo list.lo \
	net.lo fd.lo log.lo cbuf.lo safeopen.lo bitstring.lo mpi.lo \
	pack.lo parse_config.lo parse_spec.lo plugin.lo plugrack.lo \
	print_fields.lo read_config.lo node_select.lo env.lo \
	slurm_cred.lo slurm_errno.lo slurm_priority.lo \
	slurm_protocol_api.lo slurm_protocol_pack.lo \
	slurm_protocol_util.lo slurm_protocol_socket_implementation.lo \
	slurm_protocol_defs.lo slurm_rlimits_info.lo slurmdbd_defs.lo \
	uid.lo util-net.lo slurm_auth.lo jobacct_common.lo \
	slurm_accounting_storage.lo slurm_jobacct_gather.lo \
	slurm_jobcomp.lo switch.lo arg_desc.lo malloc.lo getopt.lo \
	getopt1.lo $(am__objects_1) slurm_selecttype_info.lo \
	slurm_resource_info.lo hostlist.lo slurm_step_layout.lo \
	checkpoint.lo select_job_res.lo parse_time.lo job_options.lo \
	global_defaults.lo timers.lo stepd_api.lo \
	write_labelled_message.lo proc_args.lo slurm_strcasestr.lo
libcommon_la_OBJECTS = $(am_libcommon_la_OBJECTS)
libcommon_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libcommon_la_LDFLAGS) $(LDFLAGS) -o $@
#----------------------------------------------------------------------
am_libeio_la_OBJECTS = eio.lo io_hdr.lo
libeio_la_OBJECTS = $(am_libeio_la_OBJECTS)
#----------------------------------------------------------------------
am_libspank_la_OBJECTS = plugstack.lo optz.lo
libspank_la_OBJECTS = $(am_libspank_la_OBJECTS)
#----------------------------------------------------------------------
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj

.c.o:
	$(COMPILE) -c $<

.c.lo:
	$(LTCOMPILE) -c -o $@ $<

clean-generic:

clean-libtool:
	-rm -rf .libs _libs

clean-noinstPROGRAMS:
    @list='$(noinst_PROGRAMS)'; for p in $$list; do \
      f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
      echo " rm -f $$p $$f"; \
      rm -f $$p $$f ; \
    done

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

mostlyclean-libtool:
	-rm -f *.lo $(pkglib_LTLIBRARIES)

mostlyclean-am: mostlyclean-compile mostlyclean-libtool

clean: clean-generic clean-libtool clean-noinstPROGRAMS \
	mostlyclean-am

all-am: $(PROGRAMS)

libcommon.o :  $(libcommon_la_OBJECTS) $(libcommon_la_DEPENDENCIES)
	$(LINK)  $(libcommon_la_OBJECTS)
libeio.o :  $(libeio_la_OBJECTS) $(libeio_la_DEPENDENCIES)
	$(LINK)  $(libeio_la_OBJECTS)
libspank.o :  $(libspank_la_OBJECTS) $(libspank_la_DEPENDENCIES)
	$(LINK)  $(libspank_la_OBJECTS)

global_defaults.c : $(top_builddir)/config.h
	@( echo "/* This file autogenerated by src/common/Makefile */"; \
	   echo	"char *default_plugin_path = \"$(pkglibdir)\";"; \
	   echo \
	   "char *default_slurm_config_file = \"$(sysconfdir)/slurm.conf\";"; \
	   echo "char *default_plugstack = \"$(sysconfdir)/plugstack.conf\";";\
	 ) > global_defaults.c
.NOEXPORT:
